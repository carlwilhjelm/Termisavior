package javagame;
import org.newdawn.slick.*;
import org.newdawn.slick.state.*;
import org.newdawn.slick.Image;
import org.newdawn.slick.SlickException;
import java.util.Random;

public class Spider {
   public static final int dx = 32, dy = 32;
   public static int yMax, yMin, xMax, xMin, spiderHP = 1;
   int x, y, xSlope, ySlope, randYInit, hp, currentImage, totalImages; 
   boolean dead;
   public static String deathStr = "res/bot.png";
   long spawnTime;
   Spider prev, next;
   Node first, current;
   Random rand = new Random();
	
   public Spider(int xInitIn, int yMaxIn, int yMinIn, long spawnTimeIn, int totalImagesIn) throws SlickException {
	  dead = false;
      x = xInitIn; 
      yMax = yMaxIn;
      yMin = yMinIn;
      //5 random starting positions
      randYInit = rand.nextInt(3) + 1;
      y = yMin + (((yMax - yMin)/4) * randYInit);
      xSlope = rand.nextInt(3) + 2;
      ySlope = rand.nextInt(7) - 3;
      spawnTime = spawnTimeIn;
      prev = null;
      next = null;
      hp = spiderHP;
      totalImages = totalImagesIn;
   }
   
   public static void setBounds(int xMaxIn, int yMaxIn, int xMinIn, int yMinIn) {
	   xMax = xMaxIn;
	   yMax = yMaxIn;
	   xMin = xMinIn;
	   yMin = yMinIn;
   }
	
   public boolean moveR() {
      x += xSlope;
      y += ySlope;
      if (y > yMax || y < yMin) ySlope *= -1;
      return x < xMax;
   }
   
   public boolean moveL() {
	      x -= xSlope;
	      y += ySlope;
	      if (y > yMax || y < yMin) ySlope *= -1;
	      return x < xMin;
	   }
	
   public int nextImage() {
	  if (dead) return 0;
      if (++currentImage == totalImages) current = 0;
	  return currentImage;
   }
   
   public void death() {
	   dead = true;
   }
   
   public void setHP(int x) {
	   hp = x;
   }
   
   public boolean hit(int x) {
	   hp -= x;
	   return hp <= 0;
   }
	
}
